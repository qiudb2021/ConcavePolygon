const Drawable = require('./Drawable.js');

module.exports = class Polygon extends Drawable {
    constructor(state) {
        super(Object.assign({
          size: {w: 100, h: 100},
          outlineWidth: 0,
          outlineColor: 'black',
          posList: []
        }, state));
      }

    setPosList(posList, scale) {
        scale = scale || 1;
        posList.forEach(pos => {
            pos.x = pos.x * scale,
            pos.y = pos.y * scale
        });
        this.setState({
            posList: posList
        });
    }
    setOutlineWidth(outlineWidth) {
      this.setState({
        outlineWidth
      });
    }
  
    setOutlineColor(outlineColor) {
      this.setState({
        outlineColor
      });
    }
    draw (ctx) {
        ctx.fillStyle = this.state.color;
        ctx.strokeStyle = this.state.outlineColor;
    
        posList = this.state.posList

        ctx.beginPath();
        ctx.moveTo(posList[0].x, posList[0].y);
        for (let i = 1; i < posList.length; i++) {
            ctx.lineTo(posList[i].x, posList[i].y);
        }
        ctx.lineTo(posList[0].x, posList[0].y)

        if (this.state.color != "transparent")
          ctx.fill();
    
        if (this.state.outlineWidth > 0) {
          ctx.lineWidth = this.state.outlineWidth;
          ctx.stroke();
        }
      }
}